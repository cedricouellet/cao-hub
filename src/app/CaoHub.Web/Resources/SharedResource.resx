<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>CAOHUB</value>
  </data>
  <data name="Apps" xml:space="preserve">
    <value>Apps</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Facturio_StoreCategories_ConfirmDelete" xml:space="preserve">
    <value>Are you sure you wish to remove the category: {0}?</value>
  </data>
  <data name="DeleteDescription" xml:space="preserve">
    <value>This entry will be deactivate and will no longer be accessible. However, data referencing this entry will remain intact.</value>
  </data>
  <data name="Facturio_StoreCategories_Edit" xml:space="preserve">
    <value>Edit Store Category</value>
  </data>
  <data name="Facturio_Title" xml:space="preserve">
    <value>Facturio</value>
  </data>
  <data name="Facturio_Description" xml:space="preserve">
    <value>TODO Description EN</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="Facturio_People" xml:space="preserve">
    <value>People</value>
  </data>
  <data name="Facturio_Products" xml:space="preserve">
    <value>Products</value>
  </data>
  <data name="Facturio_Receipts" xml:space="preserve">
    <value>Receipts</value>
  </data>
  <data name="Facturio_StoreCategories" xml:space="preserve">
    <value>Store Categories</value>
  </data>
  <data name="Facturio_StoreCategories_Name_HelperText" xml:space="preserve">
    <value>Enter a unique name for the category.</value>
  </data>
  <data name="Facturio_StoreCategories_Name_Placeholder" xml:space="preserve">
    <value>e.g. Groceries</value>
  </data>
  <data name="Facturio_Stores" xml:space="preserve">
    <value>Stores</value>
  </data>
  <data name="Facturio_Taxes" xml:space="preserve">
    <value>Taxes</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Facturio_StoreCategories_Delete" xml:space="preserve">
    <value>Remove Store Category</value>
  </data>
  <data name="Facturio_StoreCategories_Create" xml:space="preserve">
    <value>Add Store Category</value>
  </data>
  <data name="ErrorMaxLength" xml:space="preserve">
    <value>The value must not exceed {1} characters.</value>
  </data>
  <data name="ErrorRequired" xml:space="preserve">
    <value>Please provide a value.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Facturio_StoreCategories_Name_ErrorExists" xml:space="preserve">
    <value>A store category with this name already exists.</value>
  </data>
  <data name="Facturio_Stores_Name_Placeholder" xml:space="preserve">
    <value>e.g. Tim Hortons</value>
  </data>
  <data name="Facturio_Stores_StoreCategoryId_HelperText" xml:space="preserve">
    <value>Select a category for this store.</value>
  </data>
  <data name="Facturio_Stores_Name_ErrorExists" xml:space="preserve">
    <value>A store with this name already exists.</value>
  </data>
  <data name="Facturio_Stores_Name_HelperText" xml:space="preserve">
    <value>Enter a unique name for the store.</value>
  </data>
  <data name="Facturio_Stores_Edit" xml:space="preserve">
    <value>Edit Store</value>
  </data>
  <data name="Facturio_Stores_Delete" xml:space="preserve">
    <value>Remove Store</value>
  </data>
  <data name="Facturio_Stores_ConfirmDelete" xml:space="preserve">
    <value>Are you sure you wish to remove the store: {0}?</value>
  </data>
  <data name="Facturio_StoreCategories_ErrorNotExists" xml:space="preserve">
    <value>The store category does not exist.</value>
  </data>
  <data name="Facturio_Stores_StoreCategoryId" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="Facturio_Stores_Create" xml:space="preserve">
    <value>Add Store</value>
  </data>
  <data name="Facturio_People_Name_ErrorExists" xml:space="preserve">
    <value>A person with this name already exists.</value>
  </data>
  <data name="Facturio_People_Edit" xml:space="preserve">
    <value>Edit Person</value>
  </data>
  <data name="Facturio_People_Create" xml:space="preserve">
    <value>Add Person</value>
  </data>
  <data name="Facturio_People_Delete" xml:space="preserve">
    <value>Remove Person</value>
  </data>
  <data name="Facturio_People_ConfirmDelete" xml:space="preserve">
    <value>Are you sure you with to remove the person: {0}?</value>
  </data>
  <data name="Facturio_People_Name_Placeholder" xml:space="preserve">
    <value>e.g. John Doe</value>
  </data>
  <data name="Facturio_People_Name_HelperText" xml:space="preserve">
    <value>Enter a unique name for this person.</value>
  </data>
  <data name="Facturio_CalculationMethods_PercentageBased" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="Facturio_CalculationMethods_AdditiveValue" xml:space="preserve">
    <value>Additive</value>
  </data>
  <data name="Facturio_StoreCategories_Singular" xml:space="preserve">
    <value>Store Category</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ErrorRange" xml:space="preserve">
    <value>The value must be between {0} and {1}.</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="Facturio_Taxes_Name_ErrorExists" xml:space="preserve">
    <value>A tax with this name already exists.</value>
  </data>
  <data name="Facturio_CalculationMethods_ErrorNotExists" xml:space="preserve">
    <value>The calculation method does not exist.</value>
  </data>
  <data name="Facturio_Taxes_Create" xml:space="preserve">
    <value>Add Tax</value>
  </data>
  <data name="Facturio_Taxes_Edit" xml:space="preserve">
    <value>Edit Tax</value>
  </data>
  <data name="Facturio_Taxes_Delete" xml:space="preserve">
    <value>Remove Tax</value>
  </data>
  <data name="Facturio_Taxes_Name_Placeholder" xml:space="preserve">
    <value>e.g. GST</value>
  </data>
  <data name="Facturio_Taxes_ConfirmDelete" xml:space="preserve">
    <value>Are you sure you wish to remove the tax: {0}?</value>
  </data>
  <data name="Facturio_Taxes_Name_HelperText" xml:space="preserve">
    <value>Enter a unique name for this tax.</value>
  </data>
  <data name="Facturio_Taxes_CalculationMethod_HelperText" xml:space="preserve">
    <value>Select the calculation method for this tax.</value>
  </data>
  <data name="Facturio_CalculationMethods_Singular" xml:space="preserve">
    <value>Calculation Method</value>
  </data>
  <data name="Facturio_Taxes_Description_Placeholder" xml:space="preserve">
    <value>e.g. Goods &amp; Services Tax</value>
  </data>
  <data name="Facturio_Taxes_Description_HelperText" xml:space="preserve">
    <value>(Optional) Enter a description to better describe the tax.</value>
  </data>
  <data name="Facturio_Taxes_Value_HelperText" xml:space="preserve">
    <value>Enter the value for this tax.</value>
  </data>
  <data name="Facturio_Taxes_Value_Placeholder" xml:space="preserve">
    <value>e.g. 14.975</value>
  </data>
  <data name="Facturio_Products_Create" xml:space="preserve">
    <value>Add Product</value>
  </data>
  <data name="Facturio_Products_Edit" xml:space="preserve">
    <value>Edit Product</value>
  </data>
  <data name="Facturio_Products_Delete" xml:space="preserve">
    <value>Remove Product</value>
  </data>
  <data name="Facturio_Products_Name_Placeholder" xml:space="preserve">
    <value>e.g. Banana</value>
  </data>
  <data name="Facturio_Products_Name_HelperText" xml:space="preserve">
    <value>Enter a unique name for the product.</value>
  </data>
  <data name="Facturio_Products_ConfirmDelete" xml:space="preserve">
    <value>Are you sure to wish to remove the product: {0}?</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Facturio_Receipts_PaidByPerson" xml:space="preserve">
    <value>Paid By</value>
  </data>
  <data name="Facturio_Receipts_PrepaidAmount" xml:space="preserve">
    <value>Prepaid Amount</value>
  </data>
  <data name="Facturio_Receipts_DiscountAmount" xml:space="preserve">
    <value>Discount</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
</root>